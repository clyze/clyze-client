plugins {
    id 'java-library'
    id 'groovy'
    id 'application'
    id 'maven-publish'
    id 'net.researchgate.release' version '2.6.0'
    id "com.jfrog.bintray" version "1.8.4"
}

//applicationDefaultJvmArgs = ["-Xmx2048m"]
sourceCompatibility = "1.8"
targetCompatibility = "1.8"

project.group = "org.clyze"

applicationName = project.name
mainClassName = 'org.clyze.client.cli.Main'

wrapper {
    gradleVersion = '6.2'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://dl.bintray.com/gfour/plast-lab' }
    // Experimental repositories for custom dependencies.
    if (project.hasProperty('artifactory_contextUrl')) {
        maven { url "${artifactory_contextUrl}/plast-public" }
        maven {
            credentials {
                username artifactory_user
                password artifactory_password
            }

            url "${artifactory_contextUrl}/plast-private"
        }
    }
}

configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
}

def groovyVersion='2.5.10'
dependencies {    
    api 'org.clyze:clue-common:3.22.5'
    api 'org.clyze:metadata-model:1.0.2'
    api "org.codehaus.groovy:groovy:${groovyVersion}"
    api "org.codehaus.groovy:groovy-json:${groovyVersion}"
    api "org.codehaus.groovy:groovy-cli-commons:${groovyVersion}"
    api 'org.apache.httpcomponents:httpclient:4.5.12'   // Used by the Rest client, Apache 2.0
    api 'org.apache.httpcomponents:httpmime:4.5.12'     // Used by the Rest client, Apache 2.0
}

jar {
    manifest {
        //noinspection GrDeprecatedAPIUsage
        attributes 'Implementation-Version' : version
    }
}

run {
    //runs the Rest client
    if (project.hasProperty("args")) {
        args project.property("args").split()
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact tasks.sourcesJar
            artifact tasks.javadocJar
        }
    }
}
if (project.hasProperty('artifactory_user')) {
publishing {
    repositories {
        maven {
            credentials {
                username artifactory_user
                password artifactory_password
            }
            //Always publish to the public releases repo
            url "${artifactory_contextUrl}/libs-public-release-local"
        }
    }
}
}

release {
    git {
        // Permit releasing from all branches.
        requireBranch = null
    }
    // Use the defaults for the rest, see https://github.com/researchgate/gradle-release
}

afterReleaseBuild.dependsOn publish

// Upload to bintray with:
//   ./gradlew clean build bintrayUpload --info
// Needs properties: bintray_clyze_user, bintray_clyze_key.
if (project.hasProperty('bintray_clyze_user') && project.hasProperty('bintray_clyze_key')) {
    if (bintray_clyze_user != 'clyze')
	throw new RuntimeException("Unsupported bintray user: ${bintray_clyze_user}")
    bintray {
        user = bintray_clyze_user
        key = bintray_clyze_key
        publications = ['mavenJava']
        configurations = ['archives']
        pkg {
            repo = 'clients'
            name = 'clyze-client'
            desc = 'Clyze Client'
            licenses = ['MIT']
            labels = ['java', 'groovy']
            vcsUrl = 'https://github.com/clyze/clyze-client'
            version {
                name = project.version
                released = new Date()
                vcsTag = project.version
            }
        }
    }
}
